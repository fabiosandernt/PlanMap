@model PlanMap.Models.Plantio

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Plant</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="createForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Lat" class="control-label"></label>
                <input asp-for="Lat" class="form-control" id="Lat" />
                <span asp-validation-for="Lat" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Long" class="control-label"></label>
                <input asp-for="Long" class="form-control" id="Long" />
                <span asp-validation-for="Long" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <!-- Dropdown para selecionar uma espécie -->
            <div class="form-group">
                <label asp-for="EspecieId" class="control-label">Espécie</label>
                <select asp-for="EspecieId" class="form-control" asp-items="ViewBag.EspeciesList">
                    <option value="">Selecione uma espécie</option>
                </select>
                <span asp-validation-for="EspecieId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>

        <button id="getLocation">Get Current Location</button>
    </div>
</div>

<div id="map" style="width: 100%; height: 400px;"></div>

@section Scripts {
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var getLocationButton = document.getElementById('getLocation');
            var latInput = document.getElementById('Lat');
            var longInput = document.getElementById('Long');

            // Initialize the map centered on Brazil
            var map = L.map('map').setView([-14.235, -51.9253], 4);

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            getLocationButton.addEventListener('click', function () {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function (position) {
                        var latitude = position.coords.latitude;
                        var longitude = position.coords.longitude;

                        // Update the input fields with current location
                        latInput.value = latitude;
                        longInput.value = longitude;

                        // Set and show marker on the map
                        var marker = L.marker([latitude, longitude]).addTo(map);
                        marker.bindPopup("Current Location").openPopup();

                        // Center the map on the current location
                        map.setView([latitude, longitude], 13);

                        // Log the current location to the console
                        console.log('Latitude:', latitude);
                        console.log('Longitude:', longitude);
                    }, function (error) {
                        console.error('Error getting location:', error.message);
                    });
                } else {
                    console.error('Geolocation is not supported by this browser.');
                }
            });
        });
    </script>
}
